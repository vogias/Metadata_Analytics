#Input 
#analytics.input.data=analytics.input.OAITargetInput
analytics.input.data=analytics.input.FSInput
analytics.mdstore.path=C:\\Users\\vogias\\Desktop\\Data\\VISH\\
##specific repositories to analyze separated with commas or use * for all repositories.
repositories.analyze=VISH


#xml feeder class
analytics.xmlHandler.input.class=xmlHandling.FS2XMLInput
#analytics.xmlHandler.input.class=xmlHandling.OAI2XMLInput

#Initializer
analytics.initializer.class=initializers.FSInitializer
#analytics.initializer.class=initializers.OAIInitializer
#repositories list (repository urls should be separated with ',')
#analytics.repositories.list=http://photodentro.edu.gr/oai-video/request
#repositories metadataformats (you can use either one metadata format for all repos or one format for each repo (seperated with ','))
#analytics.repositories.metadataFormat=oai_lom

#Output
analytics.storage=analytics.storage.store2csv

#XML handler
analytics.mdstore.data.handler=analytics.analyzer.handlers.XMLHandler

#specific elements analysis(separated with ,)
analytics.element.values =*
#lom:lom.lom:technical.lom:format,lom:lom.lom:educational.lom:learningresourcetype.lom:value,lom:lom.lom:classification.lom:purpose.lom:value,lom:lom.lom:classification.lom:taxonpath.lom:entry.lom:string


#lom:lom.lom:metametadata.lom:identifier.lom:entry

#element vocabulary analysis
vocabulary.element.values = none
#lom:lom.lom:technical.lom:format,lom:lom.lom:educational.lom:learningresourcetype.lom:value,lom:lom.lom:classification.lom:purpose.lom:value,lom:lom.lom:classification.lom:taxonpath.lom:entry.lom:string
#lom.technical.format,lom.educational.learningresourcetype.value,lom.classification.purpose.value,lom.classification.taxonpath.entry.string,



#select whether you want a federated based statistical analysis
repositories.federated.analysis=false

#temporal analysis mode (true/false)
temporal.analysis.mode= true
